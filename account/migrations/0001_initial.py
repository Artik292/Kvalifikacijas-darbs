# Generated by Django 3.2.9 on 2022-01-06 23:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_patient', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('pers_code', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length has to be 11.', regex='^.{11}$')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DoctorApplication',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('is_doctor', models.BooleanField(default=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('pers_code', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True)),
                ('sert_nr', models.CharField(max_length=11, unique=True)),
                ('spec', models.CharField(max_length=30)),
                ('free_text', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='account.user')),
                ('sert_nr', models.CharField(max_length=11, null=True, unique=True)),
                ('spec', models.CharField(max_length=30)),
                ('free_text', models.TextField(blank=True)),
                ('accepted_analysis_count', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='account.user')),
                ('regions', models.CharField(max_length=100)),
                ('uses_medicaments', models.CharField(choices=[('yes', 'yes'), ('no', 'no'), ('cannot_say', 'cannot say')], default='no', max_length=10)),
                ('medicaments', models.TextField(blank=True)),
                ('uses_alcohol', models.CharField(choices=[('yes', 'yes'), ('no', 'no'), ('cannot_say', 'cannot say')], default='no', max_length=10)),
                ('is_smoking', models.CharField(choices=[('yes', 'yes'), ('no', 'no'), ('cannot_say', 'cannot say')], default='no', max_length=10)),
                ('are_chronic_diseases', models.CharField(choices=[('yes', 'yes'), ('no', 'no'), ('cannot_say', 'cannot say')], default='no', max_length=10)),
                ('chronic_diseases', models.TextField(blank=True)),
            ],
        ),
    ]
